# Generated by Django 4.2.4 on 2023-10-23 10:51

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="DietPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "kkal",
                    models.PositiveIntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MaxValueValidator(
                                10000, "Не более 10 000 калорий в день!"
                            )
                        ],
                        verbose_name="Калорийность",
                    ),
                ),
                (
                    "protein",
                    models.PositiveIntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MaxValueValidator(
                                500, "Не более 500 г белков в день!"
                            )
                        ],
                        verbose_name="Белки",
                    ),
                ),
                (
                    "carbo",
                    models.PositiveIntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MaxValueValidator(
                                1000, "Не более 1000 г углеводов в день!"
                            )
                        ],
                        verbose_name="Углеводы",
                    ),
                ),
                (
                    "fat",
                    models.PositiveIntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MaxValueValidator(
                                300, "Не более 300 г жиров в день!"
                            )
                        ],
                        verbose_name="Жиры",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Введите название плана питания",
                        max_length=128,
                        verbose_name="Название плана питания",
                    ),
                ),
                (
                    "describe",
                    models.TextField(
                        blank=True, null=True, verbose_name="Описание плана питания"
                    ),
                ),
                (
                    "start_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата начала плана питания"
                    ),
                ),
                (
                    "end_date",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="Дата окончания плана питания",
                    ),
                ),
                (
                    "is_active_user",
                    models.BooleanField(
                        blank=True, default=True, verbose_name="Флаг активности клиента"
                    ),
                ),
                (
                    "is_active_spec",
                    models.BooleanField(
                        blank=True,
                        default=True,
                        verbose_name="Флаг активности специалиста",
                    ),
                ),
                (
                    "create_dt",
                    models.DateTimeField(
                        auto_now_add=True,
                        null=True,
                        verbose_name="Дата создания плана питания",
                    ),
                ),
                (
                    "edit_dt",
                    models.DateTimeField(
                        auto_now=True,
                        null=True,
                        verbose_name="Дата изменения плана питания",
                    ),
                ),
            ],
            options={
                "verbose_name": "План питания",
                "verbose_name_plural": "План питания",
                "ordering": ["-create_dt"],
            },
        ),
        migrations.CreateModel(
            name="Diets",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "weekday",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Понедельник"),
                            ("2", "Вторник"),
                            ("3", "Среда"),
                            ("4", "Четверг"),
                            ("5", "Пятница"),
                            ("6", "Суббота"),
                            ("7", "Воскресенье"),
                        ],
                        help_text="Введите номер дня недели от 1 до 7",
                        max_length=50,
                        verbose_name="Номер дня недели",
                    ),
                ),
                (
                    "diet_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата диеты"
                    ),
                ),
                (
                    "is_done",
                    models.BooleanField(
                        default=False, verbose_name="Флаг выполнения диеты"
                    ),
                ),
                (
                    "user_comment",
                    models.TextField(
                        blank=True,
                        max_length=300,
                        null=True,
                        verbose_name="Комментарий клиента",
                    ),
                ),
                (
                    "spec_comment",
                    models.TextField(
                        blank=True,
                        max_length=300,
                        null=True,
                        verbose_name="Комментарий специалиста",
                    ),
                ),
                (
                    "create_dt",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания диеты"
                    ),
                ),
                (
                    "edit_dt",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="Дата изменения диеты"
                    ),
                ),
            ],
            options={
                "verbose_name": "Диета",
                "verbose_name_plural": "Диета",
                "ordering": ["weekday"],
            },
        ),
        migrations.CreateModel(
            name="MealProduct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "create_dt",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "edit_dt",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="Дата изменения"
                    ),
                ),
            ],
            options={
                "verbose_name": "Продукты для блюд",
                "verbose_name_plural": "Продукты для блюд",
                "ordering": ["-create_dt"],
            },
        ),
        migrations.CreateModel(
            name="Meals",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=128, verbose_name="Название блюда"),
                ),
                (
                    "photo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="diets/",
                        verbose_name="Фото блюда",
                    ),
                ),
                (
                    "describe",
                    models.TextField(max_length=300, verbose_name="Описание блюда"),
                ),
                (
                    "recipe",
                    models.TextField(max_length=300, verbose_name="Описание рецепта"),
                ),
                (
                    "link",
                    models.CharField(
                        max_length=300, verbose_name="Ссылка на видео рецепта"
                    ),
                ),
                (
                    "create_dt",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания блюда"
                    ),
                ),
                (
                    "edit_dt",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="Дата изменения блюда"
                    ),
                ),
            ],
            options={
                "verbose_name": "Справочник блюд",
                "verbose_name_plural": "Справочник блюд",
                "ordering": ["-create_dt"],
            },
        ),
        migrations.CreateModel(
            name="MealsType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=128, verbose_name="Название типа питания"
                    ),
                ),
                ("describe", models.TextField(max_length=300, verbose_name="Описание")),
                (
                    "create_dt",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания типа питания"
                    ),
                ),
                (
                    "edit_dt",
                    models.DateTimeField(
                        auto_now=True,
                        null=True,
                        verbose_name="Дата изменения типа питания",
                    ),
                ),
            ],
            options={
                "verbose_name": "Тип питания",
                "verbose_name_plural": "Тип питания",
                "ordering": ["-create_dt"],
            },
        ),
        migrations.CreateModel(
            name="Products",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=128, verbose_name="Название продукта"),
                ),
                ("kkal", models.PositiveIntegerField(verbose_name="Калорийность")),
                ("protein", models.PositiveIntegerField(verbose_name="Белки")),
                ("carbo", models.PositiveIntegerField(verbose_name="Углеводы")),
                ("fat", models.PositiveIntegerField(verbose_name="Жиры")),
                (
                    "photo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="diets/",
                        verbose_name="Фото продукта",
                    ),
                ),
                ("describe", models.TextField(verbose_name="Описание продукта")),
                (
                    "create_dt",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата добавления"
                    ),
                ),
                (
                    "edit_dt",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="Дата изменения"
                    ),
                ),
            ],
            options={
                "verbose_name": "Продукт",
                "verbose_name_plural": "Продукты",
                "ordering": ["-create_dt"],
            },
        ),
        migrations.CreateModel(
            name="MealsList",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "describe",
                    models.TextField(
                        blank=True,
                        max_length=300,
                        null=True,
                        verbose_name="Список блюд",
                    ),
                ),
                (
                    "create_dt",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания списка блюд"
                    ),
                ),
                (
                    "edit_dt",
                    models.DateTimeField(
                        auto_now=True,
                        null=True,
                        verbose_name="Дата изменения списка блюд",
                    ),
                ),
                (
                    "meal",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="meals_list",
                        to="diets.meals",
                        verbose_name="Питание",
                    ),
                ),
            ],
            options={
                "verbose_name": "Список блюд",
                "verbose_name_plural": "Список блюд",
                "ordering": ["-create_dt"],
            },
        ),
        migrations.AddField(
            model_name="meals",
            name="meal_product",
            field=models.ManyToManyField(
                related_name="meals",
                through="diets.MealProduct",
                to="diets.products",
                verbose_name="Продукты",
            ),
        ),
        migrations.AddField(
            model_name="mealproduct",
            name="meal",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="meals_products",
                to="diets.meals",
            ),
        ),
        migrations.AddField(
            model_name="mealproduct",
            name="product",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="products_meals",
                to="diets.products",
            ),
        ),
        migrations.CreateModel(
            name="DietsMealsList",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "diet",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="diet_meals_list",
                        to="diets.diets",
                        verbose_name="Диета",
                    ),
                ),
                (
                    "meals_list",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="diet_meals_list",
                        to="diets.mealslist",
                        verbose_name="Список блюд",
                    ),
                ),
            ],
            options={
                "verbose_name": "Связь диеты со списком блюд",
                "verbose_name_plural": "Связи диет cо списками блюд",
            },
        ),
        migrations.AddField(
            model_name="diets",
            name="meals_list",
            field=models.ManyToManyField(
                blank=True,
                related_name="diets_ml",
                through="diets.DietsMealsList",
                to="diets.mealslist",
                verbose_name="Список блюд",
            ),
        ),
        migrations.AddField(
            model_name="diets",
            name="meals_type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="diets_mt",
                to="diets.mealstype",
                verbose_name="Тип питания",
            ),
        ),
        migrations.CreateModel(
            name="DietPlanDiet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "diet",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="diet_dp",
                        to="diets.diets",
                        verbose_name="Диета",
                    ),
                ),
                (
                    "diet_plan",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="dp_diet",
                        to="diets.dietplan",
                        verbose_name="План питания",
                    ),
                ),
            ],
            options={
                "verbose_name": "Связь плана питания со списком диет",
                "verbose_name_plural": "Связи плана питания cо списками диет",
            },
        ),
        migrations.AddField(
            model_name="dietplan",
            name="diet",
            field=models.ManyToManyField(
                blank=True,
                related_name="diet_diet_plan",
                through="diets.DietPlanDiet",
                to="diets.diets",
                verbose_name="Диета",
            ),
        ),
        migrations.AddField(
            model_name="dietplan",
            name="specialist",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="diet_plan_spec",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Специалист",
            ),
        ),
        migrations.AddField(
            model_name="dietplan",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="diet_plan_user",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Клиент",
            ),
        ),
    ]
